plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
	id 'org.owasp.dependencycheck' version '7.0.3'
	id 'checkstyle'
	id 'java'
}

group = 'com.dor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.9

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
  	implementation 'com.google.code.gson:gson'
	implementation 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain:3.1.4'
	implementation 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-impl-maven:3.1.4'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.8'
	implementation 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-api-maven:3.1.4'
	implementation 'com.github.docker-java:docker-java-core:3.2.13'
	implementation 'com.github.docker-java:docker-java-transport-netty:3.2.13'
	implementation 'com.github.docker-java:docker-java-transport-zerodep:3.2.13'
	implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.13'
	implementation 'com.github.docker-java:docker-java-transport-okhttp:3.2.13'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

checkstyle {
	configFile = new File(rootDir, "checkstyle/checkstyle.xml")
}

tasks.withType(Checkstyle) {
	reports {
		html.destination rootProject.file("build/reports/checkstyle.html")
	}
}

configure(checkstyleMain) {
	group = 'Verification'
	description = 'Run checkstyle on all main Java sources'
}

configure(checkstyleTest) {
	group = 'Verification'
	description = 'Run checkstyle on all test Java sources'
}

test.dependsOn('checkstyleMain', 'checkstyleTest')
targetCompatibility = JavaVersion.VERSION_1_9
